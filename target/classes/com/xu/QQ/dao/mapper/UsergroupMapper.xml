<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xu.QQ.dao.mapper.UsergroupMapper">
  <resultMap id="BaseResultMap" type="com.xu.QQ.domain.Usergroup">
    <id column="usergroupid" jdbcType="INTEGER" property="usergroupid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="groupid" jdbcType="INTEGER" property="groupid" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="unreadnum" jdbcType="INTEGER" property="unreadnum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    usergroupid, userid, groupid, ename, unreadnum
  </sql>
  <select id="selectByExample" parameterType="com.xu.QQ.domain.UsergroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from usergroup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from usergroup
    where usergroupid = #{usergroupid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from usergroup
    where usergroupid = #{usergroupid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xu.QQ.domain.UsergroupExample">
    delete from usergroup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xu.QQ.domain.Usergroup">
    <selectKey keyProperty="usergroupid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into usergroup (userid, groupid, ename, 
      unreadnum)
    values (#{userid,jdbcType=INTEGER}, #{groupid,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, 
      #{unreadnum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xu.QQ.domain.Usergroup">
    <selectKey keyProperty="usergroupid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into usergroup
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="groupid != null">
        groupid,
      </if>
      <if test="ename != null">
        ename,
      </if>
      <if test="unreadnum != null">
        unreadnum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="unreadnum != null">
        #{unreadnum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xu.QQ.domain.UsergroupExample" resultType="java.lang.Long">
    select count(*) from usergroup
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update usergroup
    <set>
      <if test="record.usergroupid != null">
        usergroupid = #{record.usergroupid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.groupid != null">
        groupid = #{record.groupid,jdbcType=INTEGER},
      </if>
      <if test="record.ename != null">
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.unreadnum != null">
        unreadnum = #{record.unreadnum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update usergroup
    set usergroupid = #{record.usergroupid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      groupid = #{record.groupid,jdbcType=INTEGER},
      ename = #{record.ename,jdbcType=VARCHAR},
      unreadnum = #{record.unreadnum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xu.QQ.domain.Usergroup">
    update usergroup
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null">
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="unreadnum != null">
        unreadnum = #{unreadnum,jdbcType=INTEGER},
      </if>
    </set>
    where usergroupid = #{usergroupid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xu.QQ.domain.Usergroup">
    update usergroup
    set userid = #{userid,jdbcType=INTEGER},
      groupid = #{groupid,jdbcType=INTEGER},
      ename = #{ename,jdbcType=VARCHAR},
      unreadnum = #{unreadnum,jdbcType=INTEGER}
    where usergroupid = #{usergroupid,jdbcType=INTEGER}
  </update>
</mapper>